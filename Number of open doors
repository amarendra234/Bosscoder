class Solution {
  public:
    int noOfOpenDoors(long long N) {
        // code here
        long long int i=1;
        int count=0;// one number how many time touched
                      // it's touched by it's all factor
                      // if factor is even then door are closed otherwise open
                      // only perfect square having odd number of factor 
                      // so problem reduce finding all prefect square
        // while(i*i<=N){
        //     count++;
        //     i+=1;
        // }
        // return count;
        //apply binary search
        long long int start=1;
        long long int end=N;
        long long int ans;
        while(start<=end){
            long long int mid=start+(end-start)/2;
            if(mid>1e6){
                end=mid-1;
            }
            else if(mid*mid<=N){
                ans=mid;
                start=mid+1;
            }else{
                end=mid-1;
            }
        }
        return (int)ans;
    }
};
