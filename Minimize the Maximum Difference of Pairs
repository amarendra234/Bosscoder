class Solution {
public:
    bool isValid(vector<int>&nums,int mid,int p){
        int count=0;
        int i=0;
        while(i<nums.size()){
            if(i+1<nums.size()){
                int diff=nums[i+1]-nums[i];
                if(diff<=mid){
                    count++;
                    i+=2;
                }else{
                    i+=1;
                }
            }else{
                break;
            }
        }
        return count>=p;
    }
    int minimizeMax(vector<int>& nums, int p) {
         sort(nums.begin(),nums.end());
         int n=nums.size();
         int l=0,r=nums[n-1]-nums[0];
         int ans;
         while(l<=r){
              int mid=l+(r-l)/2;
              if(isValid(nums,mid,p)){
                  ans=mid;
                  r=mid-1;
              }else{
                l=mid+1;
              }
         }
         return ans;
    }
};
