class Solution {
public:
    void subset(vector<int>&arr,int index,vector<int>&temp,vector<vector<int>>&ans){
        if(index==arr.size()){
            ans.push_back(temp);
            return;
        }
     
        // include in ans
  
        temp.push_back(arr[index]);
        subset(arr,index+1,temp,ans);
        temp.pop_back();
        
        
        // not include in ans
        while((index+1)<arr.size() and arr[index]==arr[index+1]){
            index++;
        }
        subset(arr,index+1,temp,ans);
    
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
          vector<vector<int>>ans;
          vector<int>temp;
          set<int>st;
        subset(nums,0,temp,ans);
          return ans;
    }
};
