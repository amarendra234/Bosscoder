class UpdateMatrix {
public:
     vector<vector<int>> solve(vector<vector<int>> input) {
		int n=input.size();
          int m=input[0].size();
          int x[]={-1,1,0,0};
          int y[]={0,0,-1,1};
          vector<vector<int>>ans(n,vector<int>(m,0));
          for(int i=0;i<n;i++){
               for(int j=0;j<m;j++){
                    if(input[i][j]==0){
                         ans[i][j]=0;
                    }else{
                         queue<pair<int,pair<int,int>>>q;//{row,col,distance}
                         q.push({i,{j,0}});
                         vector<vector<int>>vis(n,vector<int>(m,0));
                         vis[i][j]=1;
                         while(q.size()>0){
                              int row=q.front().first;
                              int col=q.front().second.first;
                              int d=q.front().second.second;
                              q.pop();
                              if(input[row][col]==0){
                                   ans[i][j]=d;
                                   break;
                              }
                              for(int i=0;i<4;i++){
                                   int lx=row+x[i];
                                   int ly=col+y[i];
                                   if(lx>=0 and lx<n and ly>=0 and ly<m and vis[lx][ly]==0){
                                        q.push({lx,{ly,d+1}});
                                        vis[lx][ly]=1;
                                   }
                              }
                         }
                    }
               }
          }
          return ans;
     }
};
