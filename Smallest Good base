class Solution {
public:
    string smallestGoodBase(string n) {
        long long int num=stoll(n);
        for(int i=63;i>=1;i--){
            long long int l=2;
            long long int r=pow(num, 1.0 / i) + 1; // calculate till write range
           
            while(l<=r){
                 long long int mid=l+(r-l)/2;
                 long long int sum=1;
                 long long int m=1;
                   int flag=0;
                    for(int j=1;j<=i;j++){
                         if(m>(num-sum)/mid){
                            flag=1;
                            break;
                         }
                         m=m*mid;
                         sum+=m;
                         if(sum>num){
                            flag=1;
                            break;
                         }
                    }
                if(sum>num or flag==1){
                  r=mid-1;
                }else if(sum<num){
                  l=mid+1;
                }else{
                    return to_string(mid);
                }
            }
        }
        return to_string(num-1);
    }
};
