/*
 * Definition for linked list.
 * class Node {
 *  public:
 *		int data;
 *		Node *next;
 *		Node() : data(0), next(nullptr) {};
 *		Node(int x) : data(x), next(nullptr) {}
 *		Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node* segregateEvenOdd(Node* head)
{
     Node* even=new Node(-1);
     Node* odd=new Node(-1);
     Node* preEven=even;
     Node* preOdd=odd;
     Node* temp=head;
     while(temp!=NULL){
         if((temp->data)%2==0){
             preEven->next=temp;
             preEven=preEven->next;
         }else{
             preOdd->next=temp;
             preOdd=preOdd->next;
         }
         temp=temp->next;
     }
     preEven->next=NULL;
     preOdd->next=NULL;
     if(even->next==NULL){
         return odd->next;
     }
     preEven->next=odd->next;
     return even->next;
}
