class KSmallestPairs {
public:
     vector<vector<int>> solve(vector<int> arr1, vector<int> arr2, int k) {
		 priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>pq;
    pq.push({arr1[0]+arr2[0],{0,0}});
    set<pair<int,int>>st;
    vector<vector<int>>ans;
    int count=0;
    st.insert({0,0});
    while(pq.size()>0){
        int index1=pq.top().second.first;
        int index2=pq.top().second.second;
        pq.pop();
        count++;
        ans.push_back({arr1[index1],arr2[index2]});
        if(count==k){
            return ans;
        }
        if((index1+1)<arr1.size()){
           if(st.find({index1+1,index2})==st.end()){
               st.insert({index1+1,index2});
               pq.push({arr1[index1+1]+arr2[index2],{index1+1,index2}});
           }
        }
        if((index2+1)<arr2.size()){
            if(st.find({index1,index2+1})==st.end()){
                st.insert({index1,index2+1});
                pq.push({arr1[index1]+arr2[index2+1],{index1,index2+1}});
            }
        }

    }
    return ans;
     }
};
